~ select search by case
var colinput = Array.prototype.slice.call( document.getElementsByTagName('input'), 0 );

var colstatus = colinput.filter(x => { 
let attr = x.getAttribute('name'); 
if ( attr == null ) { return false; } 
return attr == 'CaseStatusType' });

colinput = colinput.filter(x => { 
let attr = x.getAttribute('name'); 
if ( attr == null ) { return false; } 
return attr == 'SearchBy' });
colinput[0].click();
colstatus[1].click();

~ set start and end date
dteStart = '{0}';
dteEnding = '{1}';
searchParm = '{2}';
tboxes = [ 'CaseSearchValue', 'DateFiledOnAfter', 'DateFiledOnBefore' ];
document.getElementById(tboxes[0]).value = searchParm;
document.getElementById(tboxes[1]).value = dteStart;
document.getElementById(tboxes[2]).value = dteEnding;
tboxes.forEach(t => document.getElementById(t).dispatchEvent(new Event('change')))


~ click search
document.getElementById('SearchSubmit').click();

~ get case list
var tables = Array.prototype.slice.call( document.getElementsByTagName('table'), 0);
return tables[5].outerHTML;

~ get case style
dv = document.getElementById('divCaseInformation_body').getElementsByTagName('div')[2]
var cs = dv.innerText.trim().split('|')[1].trim();
/* get plaintiff */
var list = document.getElementsByTagName("span");
var arr = Array.prototype.slice.call( list, 0 );
var find = arr.filter(a => { let attr = a.getAttribute('class'); if (attr == null) { return false;} return attr == 'text-primary' });
find = find.filter(a => { let txt = a.innerText.trim(); return txt == 'PLAINTIFF' });
var pln = find[0].closest('p').innerText.replace('PLAINTIFF','').trim();
var obj = { "casestyle": cs, "plaintiff": pln, "addr": "" };

/* get defendant address */

var dvparty = document.getElementById('divPartyInformation_body');
var parties = Array.prototype.slice.call( dvparty.getElementsByTagName('p'), 0 ); 
var partytypes = [ "RESPONDENT", "DEFENDANT" ];
parties = parties.filter(f => { 
    var found = false;
    var txt = f.closest('div').innerText.trim();
    partytypes.forEach(p => { if( txt.indexOf(p) >= 0 ) { found = true; } });
	if (!found) { return false; }
	return f.innerHTML.indexOf('<span') < 0;
	});
if (parties.length <= 0 ) return JSON.stringify(obj);
var addr = parties[0].innerText; 
while (addr.indexOf('\n') >= 0) { addr = addr.replace('\n','|').trim(); }
obj.addr = addr;
return JSON.stringify(obj);

~ return to search selection
document.getElementById('tcControllerLink_0').click();

~ get search record count
var sps = Array.prototype.slice.call( document.getElementsByTagName("span"), 0 );
sps = sps.filter(a => { let attr = a.getAttribute('class'); if (attr == null) { return false;} return attr == 'k-pager-info k-label'; });
var arrspan = [];
sps.forEach(s => arrspan.push(s.innerText.trim()));
return JSON.stringify(arrspan);

~ login process 01
var bttn = document.getElementById('dropdownMenu1');
var parentDiv = bttn.closest('div');
var ul = parentDiv.getElementsByTagName('ul')[0];
var li = ul.getElementsByTagName('li')
var lastLi = li.length - 1;
var link = li[lastLi].children[0]
bttn.click();
link.click();

~ login process 02
var uid = '{0}'
var pwd = '{1}'
var userBox = document.getElementById('UserName');
var wordBox = document.getElementById('Password');
var chekBox = document.getElementById('TOSCheckBox');
var signin = document.getElementById('btnSignIn');
userBox.value = uid;
wordBox.value = pwd;
chekBox.click();
while (signin.getAttribute('disabled') !== null ) { chekBox.click(); }
signin.click();

~ end of file
