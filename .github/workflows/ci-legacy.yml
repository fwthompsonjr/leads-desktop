# This workflow will build a .NET framework project(s)
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI .NET Framework Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]
    env:
        SOLUTION_NAME: Thompson.RecordSearch.Framework.sln
        TEST_FILE_NAME: "test-results-${{ matrix.dotnet-version }}.trx"
        REPORT_FILE_NAME: "test-report-${{ matrix.dotnet-version }}.md"


    steps:
    - uses: actions/checkout@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
      
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1.1

    - name: setup-liquid-test-reports
      run: dotnet tool install --global LiquidTestReports.Cli --version 1.4.3-beta

    - name: Restore Packages
      run: nuget restore ${{ env.SOLUTION_NAME }}

    - name: Build solution
      run: msbuild ${{ env.SOLUTION_NAME }} -t:rebuild -property:Configuration=Release

    - name: Test with dotnet
      run: dotnet test ${{ env.SOLUTION_NAME }} --logger trx -c Release --no-restore --results-directory ${{ env.TEST_FILE_NAME }}

    - name: Publish Test Results
      shell: pwsh
      run: |
        $input = "File=$($env:TEST_FILE_NAME);Format=Trx"
        liquid --inputs $input --output-file $env:REPORT_FILE_NAME
        $content = [system.io.file]::ReadAllText( $Env:TEST_FILE_NAME )
        $content | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
    